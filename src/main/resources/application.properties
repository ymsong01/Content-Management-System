# Spring MySQL Setting for Datasource
spring.datasource.driverClassName = com.mysql.jdbc.Driver
spring.datasource.url = jdbc:mysql://localhost/ContentManagementSystem

# Username and password
spring.datasource.username = ymsong01
spring.datasource.password=

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Redis (caching)
redisHostName = 127.0.0.1
redisPortNumber = 5570

# Debug mode
debugMode = true

# Spring Security
security.basic.enabled = false

# Initialization
spring.datasource.schema = classpath:/dbSchema.sql
spring.datasource.data = classpath:/data.sql

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
# Note: update will update the schema but it won't create tables.
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# Template engine (not used much. Only use is in resources/templates/error.html)
spring.thymeleaf.cache = false